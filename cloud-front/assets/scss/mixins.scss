@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-center-x {
  display: flex;
  justify-content: center;
}

@mixin flex-center-y {
  display: flex;
  align-items: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin grid-center {
  display: grid;
  align-items: center;
  justify-content: center;
}

@mixin grid($gap-x, $gap-y: $gap-x) {
  display: grid;
  @include grid-gap($gap-x, $gap-y);
}

@mixin grid-row($gap-x: none, $gap-y: $gap-x) {
  display: grid;
  grid-auto-flow: column;

  @if $gap-x != none {
    grid-column-gap: $gap-x;
  }

  @if $gap-y != none {
    grid-row-gap: $gap-y;
  }
}

@mixin grid-gap($gap-x, $gap-y: $gap-x) {
  grid-column-gap: $gap-x;
  grid-row-gap: $gap-y;
}

@mixin grid-row-center {
  @include grid-row;
  align-items: center;
}

@mixin borderless {
  outline: none;
  border: none;
  box-shadow: none;
}

@mixin list-style-none {
  padding: 0;
  margin: 0;
  list-style: none;
}

@mixin text-ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

$breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1440px,
  3xl: 1904px,
);

@mixin max-width($break) {
  @each $breakpoint, $screen-width in $breakpoints {
    @if $break == $breakpoint {
      @media (max-width: $screen-width - 1px) {
        @content;
      }
    }
  }
}

@mixin min-width($break) {
  @each $breakpoint, $screen-width in $breakpoints {
    @if $break == $breakpoint {
      @media (min-width: $screen-width) {
        @content;
      }
    }
  }
}

@mixin line-clamp($line) {
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: $line;
  -webkit-box-orient: vertical;
}

@mixin triangle($direction: bottom, $color: currentColor, $width: 15px, $height: 15px) {
  border-style: solid;
  height: 0;
  width: 0;

  // Cardinal Directions - can't be scalene this way
  @if ($direction == top) {
    border-color: transparent transparent $color transparent;
    border-width: 0 ($width/2) $height ($width/2);
  }

  @if ($direction == bottom) {
    border-color: $color transparent transparent transparent;
    border-width: $height ($width/2) 0 ($width/2);
  }

  @if ($direction == right) {
    border-color: transparent transparent transparent $color;
    border-width: ($height/2) 0 ($height/2) $width;
  }

  @if ($direction == left) {
    border-color: transparent $color transparent transparent;
    border-width: ($height/2) $width ($height/2) 0;
  }

  // Ordinal Directions - can be scalene this way!
  @if ($direction == top-left) {
    border-color: $color transparent transparent transparent;
    border-width: $height $width 0 0;
  }

  @if ($direction == top-right) {
    border-color: transparent $color transparent transparent;
    border-width: 0 $width $height 0;
  }

  @if ($direction == bottom-left) {
    border-color: transparent transparent transparent $color;
    border-width: $height 0 0 $width;
  }

  @if ($direction == bottom-right) {
    border-color: transparent transparent $color transparent;
    border-width: 0 0 $height $width;
  }
}

@mixin svg-hoverable($primary, $secondary) {
  svg {
    color: $primary;

    .secondary {
      color: $secondary;
    }
  }

  &:hover {
    color: $secondary;
    background: $primary;

    svg {
      color: $secondary;

      .secondary {
        color: $primary;
      }
    }
  }
}

@mixin svg-activable($active-class, $primary, $secondary) {
  &.#{$active-class} {
    color: $secondary;
    background: $primary;

    svg {
      color: $secondary;

      .secondary {
        color: $primary;
      }
    }
  }
}
